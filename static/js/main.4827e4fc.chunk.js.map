{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","hasDescriptionError","hasTitleError","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onAdd","props","trim","this","onSubmit","htmlFor","id","type","onChange","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4827e4fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasDescriptionError: false,\n    hasTitleError: false,\n  };\n\n  handleChange = (event) => {\n    const {\n      name, value,\n    } = event.target;\n\n    this.setState({\n      [name]: value,\n      hasTitleError: false,\n      hasUserError: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const { title, description } = this.state;\n\n    if (!title.trim()) {\n      this.setState({\n        hasTitleError: !title.trim(),\n      });\n\n      return;\n    }\n\n    if (!description.trim()) {\n      this.setState({\n        hasDescriptionError: !description.trim(),\n      });\n\n      return;\n    }\n\n    onAdd(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label\n          htmlFor=\"title\"\n        >\n          Name:\n          <br />\n        </label>\n        <input\n          className=\"form__input\"\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label\n          htmlFor=\"description\"\n        >\n          <br />\n          Description:\n          <br />\n        </label>\n        <textarea\n          className=\"form__input\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label\n          htmlFor=\"img\"\n        >\n          <br />\n          Image:\n          <br />\n        </label>\n        <input\n          className=\"form__input\"\n          id=\"img\"\n          type=\"url\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label\n          htmlFor=\"imdbUrl\"\n        >\n          <br />\n          IMDB URL:\n          <br />\n        </label>\n        <input\n          className=\"form__input\"\n          id=\"imdbUrl\"\n          type=\"url\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label\n          htmlFor=\"imdbId\"\n        >\n          <br />\n          IMDB id:\n          <br />\n        </label>\n        <input\n          className=\"form__input\"\n          id=\"imdbId\"\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n          required\n        />\n        <button\n          className=\"submit\"\n          type=\"submit\"\n        >\n          ADD\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}